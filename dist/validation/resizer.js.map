{"version":3,"sources":["../../src/validation/resizer.js"],"names":["validateRequestBody","errors","data","imgUrl","Validator","isEmpty","isURL","isValid"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,sBAAsB,SAAtBA,mBAAsB,OAAQ;AAClC,MAAIC,SAAS,EAAb;;AAEAC,OAAKC,MAAL,GAAc,CAAC,uBAAQD,KAAKC,MAAb,CAAD,GAAwBD,KAAKC,MAA7B,GAAsC,EAApD;;AAEA,MAAIC,oBAAUC,OAAV,CAAkBH,KAAKC,MAAvB,CAAJ,EAAoC;AAClCF,WAAOE,MAAP,GAAgB,wBAAhB;AACD;;AAED,MAAI,CAACC,oBAAUE,KAAV,CAAgBJ,KAAKC,MAArB,CAAL,EAAmC;AACjCF,WAAOE,MAAP,GAAgB,cAAhB;AACD;;AAED,SAAO;AACLF,kBADK;AAELM,aAAS,uBAAQN,MAAR;AAFJ,GAAP;AAID,CAjBD;;kBAmBeD,mB","file":"resizer.js","sourcesContent":["import Validator from 'validator';\nimport isEmpty from './utility/is-empty';\n\nconst validateRequestBody = data => {\n  let errors = {};\n\n  data.imgUrl = !isEmpty(data.imgUrl) ? data.imgUrl : '';\n\n  if (Validator.isEmpty(data.imgUrl)) {\n    errors.imgUrl = 'Image URL is required.';\n  }\n\n  if (!Validator.isURL(data.imgUrl)) {\n    errors.imgUrl = 'Invalid URL.';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nexport default validateRequestBody;\n"]}