{"version":3,"sources":["../../src/validation/resizer.js"],"names":["validateRequestBody","errors","data","imgUrl","Validator","isEmpty","isURL","isValid"],"mappings":";;;;;;AAGA;;;;AAEA;;;;;;AAEA;;;;;AAPA;;AAEA;AAUA,IAAMA,sBAAsB,SAAtBA,mBAAsB,OAAQ;AAClC;AACA,MAAIC,SAAS,EAAb;;AAEA;AACAC,OAAKC,MAAL,GAAc,CAAC,uBAAQD,KAAKC,MAAb,CAAD,GAAwBD,KAAKC,MAA7B,GAAsC,EAApD;;AAEA;AACA,MAAIC,oBAAUC,OAAV,CAAkBH,KAAKC,MAAvB,CAAJ,EAAoC;AAClCF,WAAOE,MAAP,GAAgB,wBAAhB;AACD;;AAED;AACA,MAAI,CAACC,oBAAUE,KAAV,CAAgBJ,KAAKC,MAArB,CAAL,EAAmC;AACjCF,WAAOE,MAAP,GAAgB,cAAhB;AACD;;AAED;AACA,SAAO;AACLF,kBADK;AAELM,aAAS,uBAAQN,MAAR;AAFJ,GAAP;AAID,CAtBD;AARA;kBAgCeD,mB","file":"resizer.js","sourcesContent":["/** @module src/validation/resizer */\n\n/** Import Validator dependency. */\nimport Validator from 'validator';\n/** Import isEmpty custom function*/\nimport isEmpty from './utility/is-empty';\n\n/**\n * Function to validate arguments.\n * Checks if argument is empty or invalid and returns an error object\n * and a boolean value whether the error object is empty or not.\n */\nconst validateRequestBody = data => {\n  /** Define errors object. */\n  let errors = {};\n\n  /** Replace value to empty string if object key is empty. */\n  data.imgUrl = !isEmpty(data.imgUrl) ? data.imgUrl : '';\n\n  /** Set imgUrl key to required error message if empty. */\n  if (Validator.isEmpty(data.imgUrl)) {\n    errors.imgUrl = 'Image URL is required.';\n  }\n\n  /** Set imgUrl key to invalid error message if invalid. */\n  if (!Validator.isURL(data.imgUrl)) {\n    errors.imgUrl = 'Invalid URL.';\n  }\n\n  /** Return errors object and isValid boolean value. */\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};\n\nexport default validateRequestBody;\n"]}