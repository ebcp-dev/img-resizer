{"version":3,"sources":["../../src/config/passport.js"],"names":["JwtStrategy","require","Strategy","ExtractJwt","Keys","opts","jwtFromRequest","fromAuthHeaderAsBearerToken","secretOrKey","module","exports","passport","use","jwt_payload","done"],"mappings":";;AAAA,IAAMA,cAAcC,QAAQ,cAAR,EAAwBC,QAA5C;AACA,IAAMC,aAAaF,QAAQ,cAAR,EAAwBE,UAA3C;AACA,IAAMC,OAAOH,QAAQ,gBAAR,CAAb;;AAEA,IAAMI,OAAO,EAAb;AACAA,KAAKC,cAAL,GAAsBH,WAAWI,2BAAX,EAAtB;AACAF,KAAKG,WAAL,GAAmBJ,KAAKI,WAAxB;;AAEAC,OAAOC,OAAP,GAAiB,oBAAY;AAC3BC,WAASC,GAAT,CACE,IAAIZ,WAAJ,CAAgBK,IAAhB,EAAsB,UAACQ,WAAD,EAAcC,IAAd,EAAuB;AAC3C,WAAOA,KAAK,IAAL,EAAWD,WAAX,CAAP;AACD,GAFD,CADF;AAKD,CAND","file":"passport.js","sourcesContent":["const JwtStrategy = require('passport-jwt').Strategy;\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\nconst Keys = require('../config/keys');\n\nconst opts = {};\nopts.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();\nopts.secretOrKey = Keys.secretOrKey;\n\nmodule.exports = passport => {\n  passport.use(\n    new JwtStrategy(opts, (jwt_payload, done) => {\n      return done(null, jwt_payload);\n    })\n  );\n};\n"]}