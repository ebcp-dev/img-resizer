{"version":3,"sources":["../../src/services/jsonpatch.js"],"names":["router","express","Router","post","passport","authenticate","session","req","res","body","errors","isValid","status","json","payload","obj","op","path","value","patched","jsonpatch","apply"],"mappings":";;;;;;AAGA;;;;AACA;;;;AACA;;;;AAIA;;;;;;AAHA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;AARA;;AAEA;;;AASA;;;;;;AAMAF,OAAOG,IAAP,CACE,GADF,EAEEC,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAFF,EAGE,UAACC,GAAD,EAAMC,GAAN,EAAc;AACZ;AADY,2BAEgB,yBAAkBD,IAAIE,IAAtB,CAFhB;AAAA,MAEJC,MAFI,sBAEJA,MAFI;AAAA,MAEIC,OAFJ,sBAEIA,OAFJ;AAGZ;;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAOH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,MAArB,CAAP;AACD;AACD;AACA,MAAMI,UAAU;AACdC,SAAKR,IAAIE,IAAJ,CAASM,GADA;AAEdC,QAAIT,IAAIE,IAAJ,CAASO,EAFC;AAGdC,UAAMV,IAAIE,IAAJ,CAASQ,IAHD;AAIdC,WAAOX,IAAIE,IAAJ,CAASS;AAJF,GAAhB;AAMA,MAAMC,UAAUC,oBAAUC,KAAV,CAAgBP,QAAQC,GAAxB,EAA6B,CAC3C;AACEC,QAAIF,QAAQE,EADd;AAEEC,UAAMH,QAAQG,IAFhB;AAGEC,WAAOJ,QAAQI;AAHjB,GAD2C,CAA7B,CAAhB;AAOA,SAAOV,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,OAArB,CAAP;AACD,CAzBH;;kBA4BenB,M","file":"jsonpatch.js","sourcesContent":["/** @module src/services/jsonpatch */\n\n/** Import dependencies. */\nimport express from 'express';\nimport jsonpatch from 'json-patch';\nimport passport from 'passport';\nconst router = express.Router();\n\n/** Import validation function. */\nimport validateJsonPatch from '../validation/jsonpatch';\n\n/**\n * @function patch\n * Router post function for / route.\n * Receives a json object from request body\n * and returns a patched json object.\n */\nrouter.post(\n  '/',\n  passport.authenticate('jwt', { session: false }),\n  (req, res) => {\n    /** Validate request body first. */\n    const { errors, isValid } = validateJsonPatch(req.body);\n    /** Respond with errors and 400 status if errors found. */\n    if (!isValid) {\n      return res.status(400).json(errors);\n    }\n    /** Get json object to patch from request body. */\n    const payload = {\n      obj: req.body.obj,\n      op: req.body.op,\n      path: req.body.path,\n      value: req.body.value\n    };\n    const patched = jsonpatch.apply(payload.obj, [\n      {\n        op: payload.op,\n        path: payload.path,\n        value: payload.value\n      }\n    ]);\n    return res.status(200).json(patched);\n  }\n);\n\nexport default router;\n"]}